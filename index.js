(function(){"use strict";var __webpack_modules__={899:function(){eval("\n;// CONCATENATED MODULE: ./src/scripts/Element/Element.js\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Element = /*#__PURE__*/_createClass(function Element(tag) {\n  var _this = this;\n\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var text = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  var params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  _classCallCheck(this, Element);\n\n  this.element = document.createElement(tag);\n  this.element.className = className;\n  this.element.innerHTML = text;\n  Object.keys(params).forEach(function (param) {\n    _this.element[param] = params[param];\n  });\n});\n\n/* harmony default export */ var Element_Element = (Element);\n;// CONCATENATED MODULE: ./src/scripts/Element/Display/Display.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction Display_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Display_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Display_createClass(Constructor, protoProps, staticProps) { if (protoProps) Display_defineProperties(Constructor.prototype, protoProps); if (staticProps) Display_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar Display = /*#__PURE__*/function (_Element) {\n  _inherits(Display, _Element);\n\n  var _super = _createSuper(Display);\n\n  function Display(container) {\n    var _this;\n\n    Display_classCallCheck(this, Display);\n\n    _this = _super.call(this, 'textarea', 'display', '', {\n      spellcheck: false\n    });\n    container.append(_this.element);\n    return _this;\n  }\n\n  Display_createClass(Display, [{\n    key: \"add\",\n    value: function add(simbol) {\n      this.element.focus();\n      var startIndex = this.element.selectionStart;\n      var endIndex = this.element.selectionEnd;\n\n      if (startIndex !== endIndex) {\n        this.del();\n      }\n\n      startIndex = this.element.selectionStart;\n      endIndex = this.element.selectionEnd;\n      var start = this.element.value.slice(0, endIndex);\n      var end = this.element.value.slice(endIndex);\n      this.element.value = start + simbol + end;\n      this.element.selectionStart = endIndex + 1;\n      this.element.selectionEnd = endIndex + 1;\n    }\n  }, {\n    key: \"del\",\n    value: function del() {\n      this.element.focus();\n      var startIndex = this.element.selectionStart;\n      var endIndex = this.element.selectionEnd;\n      var start = this.element.value.slice(0, startIndex);\n      var end = this.element.value.slice(endIndex);\n      this.element.value = start + end;\n      this.element.selectionStart = startIndex;\n      this.element.selectionEnd = startIndex;\n    }\n  }, {\n    key: \"backspace\",\n    value: function backspace() {\n      if (this.element.selectionStart !== this.element.selectionEnd) {\n        this.del();\n      } else {\n        this.element.focus();\n        var startIndex = this.element.selectionStart - 1;\n        if (startIndex < 0) startIndex = 0;\n        var endIndex = this.element.selectionEnd;\n        var start = this.element.value.slice(0, startIndex);\n        var end = this.element.value.slice(endIndex);\n        this.element.value = start + end;\n        this.element.selectionStart = startIndex;\n        this.element.selectionEnd = startIndex;\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      if (this.element.selectionStart !== this.element.selectionEnd) {\n        this.del();\n      } else {\n        this.element.focus();\n        var startIndex = this.element.selectionStart;\n        var endIndex = startIndex + 1;\n        var start = this.element.value.slice(0, startIndex);\n        var end = this.element.value.slice(endIndex);\n        this.element.value = start + end;\n        this.element.selectionStart = startIndex;\n        this.element.selectionEnd = startIndex;\n      }\n    }\n  }]);\n\n  return Display;\n}(Element_Element);\n\n/* harmony default export */ var Display_Display = (Display);\n;// CONCATENATED MODULE: ./src/scripts/Element/Button/Button.js\nfunction Button_typeof(obj) { \"@babel/helpers - typeof\"; return Button_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, Button_typeof(obj); }\n\nfunction Button_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Button_createClass(Constructor, protoProps, staticProps) { if (protoProps) Button_defineProperties(Constructor.prototype, protoProps); if (staticProps) Button_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction Button_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction Button_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) Button_setPrototypeOf(subClass, superClass); }\n\nfunction Button_setPrototypeOf(o, p) { Button_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Button_setPrototypeOf(o, p); }\n\nfunction Button_createSuper(Derived) { var hasNativeReflectConstruct = Button_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = Button_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = Button_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return Button_possibleConstructorReturn(this, result); }; }\n\nfunction Button_possibleConstructorReturn(self, call) { if (call && (Button_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return Button_assertThisInitialized(self); }\n\nfunction Button_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction Button_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction Button_getPrototypeOf(o) { Button_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Button_getPrototypeOf(o); }\n\n\n\nvar Button = /*#__PURE__*/function (_Element) {\n  Button_inherits(Button, _Element);\n\n  var _super = Button_createSuper(Button);\n\n  function Button(code, text) {\n    var _this;\n\n    Button_classCallCheck(this, Button);\n\n    _this = _super.call(this, 'button', 'btn');\n    _this.element.innerHTML = text || code;\n    _this.code = code;\n    _this.element.dataset.code = code;\n    return _this;\n  }\n\n  return Button_createClass(Button);\n}(Element_Element);\n\n/* harmony default export */ var Button_Button = (Button);\n;// CONCATENATED MODULE: ./src/scripts/data/keys.js\nvar keys = {\n  Backquote: {\n    eng: ['`', '~'],\n    ru: ['ё', 'Ё']\n  },\n  Digit1: {\n    eng: ['1', '!'],\n    ru: ['1', '!']\n  },\n  Digit2: {\n    eng: ['2', '@'],\n    ru: ['2', '\"']\n  },\n  Digit3: {\n    eng: ['3', '#'],\n    ru: ['3', '№']\n  },\n  Digit4: {\n    eng: ['4', '$'],\n    ru: ['4', ';']\n  },\n  Digit5: {\n    eng: ['5', '%'],\n    ru: ['5', '%']\n  },\n  Digit6: {\n    eng: ['6', '^'],\n    ru: ['6', ':']\n  },\n  Digit7: {\n    eng: ['7', '&'],\n    ru: ['7', '?']\n  },\n  Digit8: {\n    eng: ['8', '*'],\n    ru: ['8', '*']\n  },\n  Digit9: {\n    eng: ['9', '('],\n    ru: ['9', '(']\n  },\n  Digit0: {\n    eng: ['0', ')'],\n    ru: ['0', ')']\n  },\n  Minus: {\n    eng: ['-', '_'],\n    ru: ['-', '_']\n  },\n  Equal: {\n    eng: ['=', '+'],\n    ru: ['=', '+']\n  },\n  Backspace: {\n    eng: ['Backspace', 'Backspace'],\n    ru: ['Backspace', 'Backspace']\n  },\n  Tab: {\n    eng: ['Tab', 'Tab'],\n    ru: ['Tab', 'Tab']\n  },\n  KeyQ: {\n    eng: ['q', 'Q'],\n    ru: ['й', 'Й']\n  },\n  KeyW: {\n    eng: ['w', 'W'],\n    ru: ['ц', 'Ц']\n  },\n  KeyE: {\n    eng: ['e', 'E'],\n    ru: ['у', 'У']\n  },\n  KeyR: {\n    eng: ['r', 'R'],\n    ru: ['к', 'К']\n  },\n  KeyT: {\n    eng: ['t', 'T'],\n    ru: ['е', 'Е']\n  },\n  KeyY: {\n    eng: ['y', 'Y'],\n    ru: ['н', 'Н']\n  },\n  KeyU: {\n    eng: ['u', 'U'],\n    ru: ['г', 'Г']\n  },\n  KeyI: {\n    eng: ['i', 'I'],\n    ru: ['ш', 'Ш']\n  },\n  KeyO: {\n    eng: ['o', 'O'],\n    ru: ['щ', 'Щ']\n  },\n  KeyP: {\n    eng: ['p', 'P'],\n    ru: ['з', 'З']\n  },\n  BracketLeft: {\n    eng: ['[', '{'],\n    ru: ['х', 'Х']\n  },\n  BracketRight: {\n    eng: [']', '}'],\n    ru: ['ъ', 'ъ']\n  },\n  Backslash: {\n    eng: ['\\\\', '|'],\n    ru: ['\\\\', '/']\n  },\n  Delete: {\n    eng: ['Delete', 'Delete'],\n    ru: ['Delete', 'Delete']\n  },\n  CapsLock: {\n    eng: ['CapsLock', 'CapsLock'],\n    ru: ['CapsLock', 'CapsLock']\n  },\n  KeyA: {\n    eng: ['a', 'A'],\n    ru: ['ф', 'Ф']\n  },\n  KeyS: {\n    eng: ['s', 'S'],\n    ru: ['ы', 'Ы']\n  },\n  KeyD: {\n    eng: ['d', 'D'],\n    ru: ['в', 'В']\n  },\n  KeyF: {\n    eng: ['f', 'F'],\n    ru: ['а', 'А']\n  },\n  KeyG: {\n    eng: ['g', 'G'],\n    ru: ['п', 'П']\n  },\n  KeyH: {\n    eng: ['h', 'H'],\n    ru: ['р', 'Р']\n  },\n  KeyJ: {\n    eng: ['j', 'J'],\n    ru: ['о', 'О']\n  },\n  KeyK: {\n    eng: ['k', 'K'],\n    ru: ['л', 'Л']\n  },\n  KeyL: {\n    eng: ['l', 'L'],\n    ru: ['д', 'Д']\n  },\n  Semicolon: {\n    eng: [';', ':'],\n    ru: ['ж', 'Ж']\n  },\n  Quote: {\n    eng: [\"'\", '\"'],\n    ru: ['э', 'Э']\n  },\n  Enter: {\n    eng: ['Enter', 'Enter'],\n    ru: ['Enter', 'Enter']\n  },\n  ShiftLeft: {\n    eng: ['Shift', 'Shift'],\n    ru: ['Shift', 'Shift']\n  },\n  KeyZ: {\n    eng: ['z', 'Z'],\n    ru: ['я', 'Я']\n  },\n  KeyX: {\n    eng: ['x', 'X'],\n    ru: ['ч', 'Ч']\n  },\n  KeyC: {\n    eng: ['c', 'C'],\n    ru: ['с', 'С']\n  },\n  KeyV: {\n    eng: ['v', 'V'],\n    ru: ['м', 'М']\n  },\n  KeyB: {\n    eng: ['b', 'B'],\n    ru: ['и', 'И']\n  },\n  KeyN: {\n    eng: ['n', 'N'],\n    ru: ['т', 'Т']\n  },\n  KeyM: {\n    eng: ['m', 'M'],\n    ru: ['ь', 'Ь']\n  },\n  Comma: {\n    eng: [',', '<'],\n    ru: ['б', 'Б']\n  },\n  Period: {\n    eng: ['.', '>'],\n    ru: ['ю', 'Ю']\n  },\n  Slash: {\n    eng: ['/', '?'],\n    ru: ['.', ',']\n  },\n  ArrowUp: {\n    eng: ['▲', '▲'],\n    ru: ['▲', '▲']\n  },\n  ShiftRight: {\n    eng: ['Shift', 'Shift'],\n    ru: ['Shift', 'Shift']\n  },\n  ControlLeft: {\n    eng: ['Control', 'Control'],\n    ru: ['Control', 'Control']\n  },\n  AltLeft: {\n    eng: ['Alt', 'Alt'],\n    ru: ['Alt', 'Alt']\n  },\n  Space: {\n    eng: [' ', ' '],\n    ru: [' ', ' ']\n  },\n  AltRight: {\n    eng: ['Alt', 'Alt'],\n    ru: ['AltGraph', 'AltGraph']\n  },\n  ArrowLeft: {\n    eng: ['◄', '◄'],\n    ru: ['◄', '◄']\n  },\n  ArrowDown: {\n    eng: ['▼', '▼'],\n    ru: ['▼', '▼']\n  },\n  ArrowRight: {\n    eng: ['►', '►'],\n    ru: ['►', '►']\n  }\n};\n/* harmony default export */ var data_keys = (keys);\n;// CONCATENATED MODULE: ./src/scripts/data/textSymbols.js\nvar textSymbolsENG = ['KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM'];\nvar textSymbolsRU = ['Backquote', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period'];\n;// CONCATENATED MODULE: ./src/scripts/Element/Button/TextButton/TextButton.js\nfunction TextButton_typeof(obj) { \"@babel/helpers - typeof\"; return TextButton_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, TextButton_typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction TextButton_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction TextButton_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction TextButton_createClass(Constructor, protoProps, staticProps) { if (protoProps) TextButton_defineProperties(Constructor.prototype, protoProps); if (staticProps) TextButton_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction TextButton_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) TextButton_setPrototypeOf(subClass, superClass); }\n\nfunction TextButton_setPrototypeOf(o, p) { TextButton_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return TextButton_setPrototypeOf(o, p); }\n\nfunction TextButton_createSuper(Derived) { var hasNativeReflectConstruct = TextButton_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = TextButton_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = TextButton_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return TextButton_possibleConstructorReturn(this, result); }; }\n\nfunction TextButton_possibleConstructorReturn(self, call) { if (call && (TextButton_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return TextButton_assertThisInitialized(self); }\n\nfunction TextButton_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction TextButton_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction TextButton_getPrototypeOf(o) { TextButton_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return TextButton_getPrototypeOf(o); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar TextButton = /*#__PURE__*/function (_Button) {\n  TextButton_inherits(TextButton, _Button);\n\n  var _super = TextButton_createSuper(TextButton);\n\n  function TextButton(code, text) {\n    var _this;\n\n    TextButton_classCallCheck(this, TextButton);\n\n    _this = _super.call(this, code, text);\n    var _keys$code = data_keys[code],\n        eng = _keys$code.eng,\n        ru = _keys$code.ru;\n\n    var _eng = _slicedToArray(eng, 2),\n        engDefault = _eng[0],\n        engUpperCase = _eng[1];\n\n    var _ru = _slicedToArray(ru, 2),\n        ruDefault = _ru[0],\n        ruUpperCase = _ru[1];\n\n    _this.code = code;\n    _this.engDefault = engDefault;\n    _this.engUpperCase = engUpperCase;\n    _this.ruDefault = ruDefault;\n    _this.ruUpperCase = ruUpperCase;\n\n    _this.setSymbol();\n\n    if (code === 'Enter') {\n      _this.element.classList.add('enter');\n\n      _this.element.classList.add('l-text');\n\n      _this.currentSymbol = '\\n';\n      _this.text = 'Enter';\n    } else if (code === 'Space') {\n      _this.element.classList.add('space');\n\n      _this.currentSymbol = ' ';\n      _this.text = ' ';\n    } else if (code === 'Tab') {\n      _this.element.classList.add('tab');\n\n      _this.currentSymbol = '\\t';\n      _this.text = 'TAB';\n    }\n\n    _this.setText(_this.text);\n\n    return _this;\n  }\n\n  TextButton_createClass(TextButton, [{\n    key: \"setText\",\n    value: function setText(text) {\n      this.element.innerHTML = text;\n    }\n  }, {\n    key: \"setSymbol\",\n    value: function setSymbol() {\n      if (TextButton.lang === 'eng') {\n        // eslint-disable-next-line no-unused-expressions\n        TextButton.shift || TextButton.caps && textSymbolsENG.includes(this.code) ? this.currentSymbol = this.engUpperCase : this.currentSymbol = this.engDefault;\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        TextButton.shift || TextButton.caps && textSymbolsRU.includes(this.code) ? this.currentSymbol = this.ruUpperCase : this.currentSymbol = this.ruDefault;\n      }\n\n      this.text = this.currentSymbol;\n      this.setText(this.currentSymbol);\n    }\n  }]);\n\n  return TextButton;\n}(Button_Button);\n\n_defineProperty(TextButton, \"shift\", false);\n\n_defineProperty(TextButton, \"caps\", false);\n\n_defineProperty(TextButton, \"lang\", 'eng');\n\n/* harmony default export */ var TextButton_TextButton = (TextButton);\n;// CONCATENATED MODULE: ./src/scripts/init.js\n\n\n\n\nvar addElement = function addElement(addTo, el, className, text, params) {\n  var _Element = new Element_Element(el, className, text, params),\n      element = _Element.element;\n\n  addTo.append(element);\n  return element;\n};\n\nvar app = addElement(document.body, 'div', 'app');\naddElement(app, 'div', 'desctiption', '<p>Клавиатура сделана под ОС Windows</p><p>Чтобы поменять язык ввода нажмите Ctrl + Alt</p>');\nvar display = new Display_Display(app);\nvar keyboard = addElement(app, 'div', 'keyboard');\nkeyboard.classList.add('eng');\nTextButton_TextButton.lang = localStorage.getItem('lang');\n\n;// CONCATENATED MODULE: ./src/scripts/Element/Button/DynamicButton/DynamicButton.js\nfunction DynamicButton_typeof(obj) { \"@babel/helpers - typeof\"; return DynamicButton_typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, DynamicButton_typeof(obj); }\n\nfunction DynamicButton_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction DynamicButton_createClass(Constructor, protoProps, staticProps) { if (protoProps) DynamicButton_defineProperties(Constructor.prototype, protoProps); if (staticProps) DynamicButton_defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction DynamicButton_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction DynamicButton_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) DynamicButton_setPrototypeOf(subClass, superClass); }\n\nfunction DynamicButton_setPrototypeOf(o, p) { DynamicButton_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return DynamicButton_setPrototypeOf(o, p); }\n\nfunction DynamicButton_createSuper(Derived) { var hasNativeReflectConstruct = DynamicButton_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = DynamicButton_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = DynamicButton_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return DynamicButton_possibleConstructorReturn(this, result); }; }\n\nfunction DynamicButton_possibleConstructorReturn(self, call) { if (call && (DynamicButton_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return DynamicButton_assertThisInitialized(self); }\n\nfunction DynamicButton_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction DynamicButton_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction DynamicButton_getPrototypeOf(o) { DynamicButton_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return DynamicButton_getPrototypeOf(o); }\n\n\n\nvar DynamicButton = /*#__PURE__*/function (_Button) {\n  DynamicButton_inherits(DynamicButton, _Button);\n\n  var _super = DynamicButton_createSuper(DynamicButton);\n\n  function DynamicButton(classes, code, text) {\n    var _this;\n\n    DynamicButton_classCallCheck(this, DynamicButton);\n\n    _this = _super.call(this, code, text);\n    if (!classes) return DynamicButton_possibleConstructorReturn(_this);\n\n    if (typeof classes === 'string') {\n      _this.element.classList.add(classes);\n    } else {\n      classes.map(function (className) {\n        return _this.element.classList.add(className);\n      });\n    }\n\n    return _this;\n  }\n\n  return DynamicButton_createClass(DynamicButton);\n}(Button_Button);\n\n/* harmony default export */ var DynamicButton_DynamicButton = (DynamicButton);\n;// CONCATENATED MODULE: ./src/scripts/data/keyboardKeysOrder.js\nvar keyboardKeysOreder = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace', 'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'BracketLeft', 'BracketRight', 'Delete', 'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Semicolon', 'Quote', 'Backslash', 'Enter', 'ShiftLeft', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Period', 'Slash', 'ArrowUp', 'ShiftRight', 'ControlLeft', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\n/* harmony default export */ var keyboardKeysOrder = (keyboardKeysOreder);\n;// CONCATENATED MODULE: ./src/scripts/data/keysObjectList.js\n\n\n\n\nvar keysObjectList = keyboardKeysOrder.map(function (el) {\n  if (el === 'Backspace') {\n    return new DynamicButton_DynamicButton(['backspace', 'l-text'], 'Backspace');\n  }\n\n  if (el === 'Delete') {\n    return new DynamicButton_DynamicButton('del', 'Delete', 'DEL');\n  }\n\n  if (el === 'CapsLock') {\n    return new DynamicButton_DynamicButton(['capslock', 'l-text'], 'CapsLock', 'Caps Lock');\n  }\n\n  if (el === 'ShiftLeft') {\n    return new DynamicButton_DynamicButton(['shift', 'l-text'], 'ShiftLeft', 'Shift');\n  }\n\n  if (el === 'ShiftRight') {\n    return new DynamicButton_DynamicButton(['shift', 'l-text', 'shiftRight'], 'ShiftRight', 'Shift');\n  }\n\n  if (el === 'ControlLeft') {\n    return new DynamicButton_DynamicButton(['ctrl', 'l-text'], 'ControlLeft', 'Ctrl');\n  }\n\n  if (el === 'ControlRight') {\n    return new DynamicButton_DynamicButton(['ctrl', 'l-text'], 'ControlRight', 'Ctrl');\n  }\n\n  if (el === 'AltLeft') {\n    return new DynamicButton_DynamicButton(['alt', 'l-text'], 'AltLeft', 'Alt');\n  }\n\n  if (el === 'AltRight') {\n    return new DynamicButton_DynamicButton(['alt', 'l-text'], 'AltRight', 'Alt');\n  }\n\n  if (el === 'ArrowUp') {\n    return new TextButton_TextButton('ArrowUp', '▲');\n  }\n\n  if (el === 'ArrowLeft') {\n    return new TextButton_TextButton('ArrowLeft', '◄');\n  }\n\n  if (el === 'ArrowDown') {\n    return new TextButton_TextButton('ArrowDown', '▼');\n  }\n\n  if (el === 'ArrowRight') {\n    return new TextButton_TextButton('ArrowRight', '►');\n  }\n\n  return new TextButton_TextButton(el);\n}).reduce(function (prev, curr) {\n  var objList = prev;\n  objList[curr.code] = curr;\n  keyboard.append(curr.element);\n  return objList;\n}, {});\nvar keysTextButtontList = Object.values(keysObjectList).filter(function (obj) {\n  return obj instanceof TextButton_TextButton && !['Enter', 'Space', 'Tab'].includes(obj.code);\n});\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nvar changeSymbols = function changeSymbols() {\n  keysTextButtontList.forEach(function (obj) {\n    obj.setSymbol();\n  });\n};\n\nvar removeActiveClass = function removeActiveClass(code) {\n  var obj = keysObjectList[code];\n  if (!obj) return;\n\n  if (obj.element.classList.contains('active')) {\n    obj.element.classList.remove('active');\n  }\n};\n\nvar onEnable = function onEnable(code, event) {\n  var obj = keysObjectList[code];\n  if (!obj) return;\n\n  if (code !== 'CapsLock') {\n    obj.element.classList.add('active');\n  } else {\n    obj.element.classList.toggle('active');\n  }\n\n  if (obj instanceof TextButton_TextButton) {\n    event.preventDefault();\n    display.add(obj.currentSymbol);\n  }\n\n  if (obj instanceof DynamicButton_DynamicButton) {\n    event.preventDefault();\n  }\n\n  if (event.shiftKey) {\n    TextButton_TextButton.shift = true;\n    changeSymbols();\n  }\n\n  if (event.ctrlKey && event.altKey) {\n    if (TextButton_TextButton.lang === 'eng') {\n      localStorage.setItem('lang', 'ru');\n      TextButton_TextButton.lang = 'ru';\n    } else {\n      localStorage.setItem('lang', 'eng');\n      TextButton_TextButton.lang = 'eng';\n    }\n\n    changeSymbols();\n  }\n\n  if (code === 'Backspace') {\n    display.backspace();\n  } else if (code === 'Delete') {\n    display[\"delete\"]();\n  }\n\n  if (code !== 'CapsLock') {\n    var removeEvent = function removeEvent() {\n      removeActiveClass(code);\n      window.removeEventListener('mouseup', removeEvent);\n    };\n\n    window.addEventListener('mouseup', removeEvent);\n  } else {\n    if (TextButton_TextButton.caps) {\n      // TextButton.shift = false;\n      TextButton_TextButton.caps = false;\n    } else {\n      // TextButton.shift = true;\n      TextButton_TextButton.caps = true;\n    }\n\n    changeSymbols();\n  }\n};\n\nvar onDisable = function onDisable(code) {\n  if (code !== 'CapsLock') {\n    removeActiveClass(code);\n  }\n\n  if (code === 'ShiftLeft' || code === 'ShiftRight') {\n    TextButton_TextButton.shift = false;\n    changeSymbols();\n  }\n};\n\nwindow.addEventListener('keydown', function (event) {\n  onEnable(event.code, event);\n});\nkeyboard.addEventListener('mousedown', function (event) {\n  onEnable(event.target.dataset.code, event);\n});\nwindow.addEventListener('keyup', function (event) {\n  onDisable(event.code);\n});\nwindow.addEventListener('mouseup', function (event) {\n  onDisable(event.target.dataset.code);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///899\n")}},__webpack_exports__={};__webpack_modules__[899]()})();